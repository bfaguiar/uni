package exercicio3;

import java.util.Iterator;

public class VectorPessoas {
	
	private Pessoa[] listaPessoas;
	private int nPessoas;
	private final int ALLOC = 100;
	private int dimClasse = ALLOC;
	
	public VectorPessoas() {
		listaPessoas = new Pessoa[ALLOC];
		nPessoas = 0;
	}
	
	public boolean addPessoa(Pessoa est) {
		
		if (est == null)
			return false;
		
		if (nPessoas>=dimClasse) {
		
			dimClasse += ALLOC;
			Pessoa[] newArray = new Pessoa[dimClasse];
			System.arraycopy(listaPessoas, 0, newArray, 0, nPessoas );
			listaPessoas = newArray;
		}
		
		listaPessoas[nPessoas++] = est;
		return true;
	
	}
	
	public boolean removePessoa(Pessoa p) {
		
		for (int i = 0; i < nPessoas; i++) {
			if (listaPessoas[i] == p) {
				nPessoas--;
				for (int j = i; j < nPessoas; j++)
					listaPessoas[j] = listaPessoas[j + 1];
					return true;
				}
			}
			
		return false;
		
	}
		
	public int totalPessoas() {
		return nPessoas;
	}
		
	public Pessoa getPessoa(int i) {
		return listaPessoas[i];
	}
		
	Iterator<Pessoa> iterator() {
		return (this).new VectorIterator();
	}
	
private class VectorIterator implements Iterator<Pessoa> {
		
		private int indice;
		
		VectorIterator() {
			indice = 0;
		}
		
		public boolean hasNext() {
			return (indice < nPessoas);
		}

		public Pessoa next() {
			if (hasNext()) {
				Pessoa r = listaPessoas[indice];
				indice++;
				return r;
			}	throw new IndexOutOfBoundsException("only " + nPessoas + " elements");
		}
		
		public void remove() {
			throw new UnsupportedOperationException("Operação não suportada!"); // nao se pode remover... 
		}
	}
}
